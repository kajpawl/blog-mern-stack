{"version":3,"sources":["config.js","redux/postsRedux.js","redux/store.js","components/layout/PageContainer/PageContainer.js","components/common/Logo/Logo.js","components/layout/MainMenu/MainMenu.js","components/features/NavBar/NavBar.js","components/layout/MainLayout/MainLayout.js","components/common/PageTitle/PageTitle.js","components/common/Button/Button.js","components/common/SmallTitle/SmallTitle.js","components/common/HtmlBox/HtmlBox.js","components/features/PostSummary/PostSummary.js","utils/cutText.js","components/features/PostsList/PostsList.js","components/common/Spinner/Spinner.js","components/common/Alert/Alert.js","components/common/Pagination/Pagination.js","components/features/Posts/Posts.js","components/features/Posts/PostsContainer.js","components/pages/Home/HomePage.js","components/features/PostsCounter/PostsCounter.js","components/features/PostsCounter/PostsCounterContainer.js","components/pages/Posts/PostsPage.js","components/features/SinglePost/SinglePost.js","components/features/SinglePost/SinglePostContainer.js","components/pages/SinglePost/SinglePostPage.js","components/pages/RandomPost/RandomPostPage.js","components/common/TextField/TextField.js","components/common/SectionTitle/SectionTitle.js","components/features/PostForm/PostForm.js","components/features/PostForm/PostFormContainer.js","components/pages/AddPost/AddPostPage.js","components/pages/EditPost/EditPostPage.js","components/pages/Contact/ContactPage.js","components/pages/NotFound/NotFoundPage.js","components/features/ScrollToTop/ScrollToTop.js","App.js","index.js"],"names":["API_URL","BASE_URL","createActionName","name","concat","initialState","data","request","pending","error","success","singlePost","amount","postsPerPage","presentPage","getSinglePost","_ref3","posts","getRequest","_ref4","getPages","_ref5","Math","ceil","LOAD_POSTS","LOAD_SINGLE_POST","LOAD_POSTS_PAGE","START_REQUEST","END_REQUEST","ERROR_REQUEST","RESET_REQUEST","loadSinglePost","post","type","loadPostsByPage","payload","startRequest","endRequest","errorRequest","loadSinglePostRequest","id","_ref8","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","res","wrap","_context2","prev","next","axios","get","sent","t0","message","stop","_x2","apply","this","arguments","rootReducer","combineReducers","statePart","length","undefined","action","objectSpread","toConsumableArray","store","createStore","compose","applyMiddleware","thunk","PageContainer","_ref","children","react_default","createElement","className","Logo","links","location","MainMenu","map","link","index","key","react_router_dom","pathname","path","to","title","withRouter","props","MainMenu_MainMenu_MainMenu","NavBar","state","common_Logo_Logo","layout_MainMenu_MainMenu","React","Component","MainLayout","layout_PageContainer_PageContainer","features_NavBar_NavBar","PageTitle","Button","_ref$variant","variant","otherProps","objectWithoutProperties","assign","SmallTitle","HtmlBox","ReactHtmlParser","PostSummary","content","author","common_SmallTitle_SmallTitle","common_HtmlBox_HtmlBox","maxLength","substr","lastIndexOf","cutText","common_Button_Button","PostsList","features_PostSummary_PostSummary","Spinner","react_animated_css_lib","animationIn","animationOut","Alert","index_esm","icon","Pagination","_this","initialPage","visible","changePage","newPage","onPageChange","setState","pages","_this$state","onClick","Array","el","page","Posts","postsNumber","pagination","loadPostPage","_this$props$request","_this$props","common_Spinner_Spinner","features_PostsList_PostsList","common_Alert_Alert","common_Pagination_Pagination","connect","_ref10","_callee4","startAt","limit","_context4","_x4","loadPostsByPageRequest","HomePage","common_PageTitle_PageTitle","PostsContainer","PostsCounter","postsCount","_ref2","PostsPage","PostsCounterContainer","SinglePost","isMounted","match","loadRandomPost","_this$props2","_this$props$singlePos","react_facebook_lib","appId","href","_ref9","_callee3","_context3","_x3","SinglePostPage","SinglePostContainer","params","RandomPostPage","TextField","value","label","onChange","SectionTitle","PostForm","handleChange","e","defineProperty","target","handleEditor","text","handlePostSubmit","addPost","editPost","resetRequest","preventDefault","handlePostDelete","deletePost","_this$props4","onSubmit","common_TextField_TextField","common_SectionTitle_SectionTitle","react_medium_editor_default","options","placeholder","toolbar","buttons","_ref11","_callee5","_context5","_x5","addPostRequest","_ref12","_callee6","_context6","_x6","editPostRequest","_ref13","_callee7","_context7","delete","_x7","deletePostRequest","AddPostPage","PostFormContainer","EditPostPage","ContactPage","style","position","bottom","left","right","textAlign","fontSize","NotFoundPage","ScrollToTop","prevProps","window","scrollTo","top","App","features_ScrollToTop_ScrollToTop","layout_MainLayout_MainLayout","react_router","exact","component","Home","RandomPost","AddPost","EditPost","Contact","NotFound","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.428bb5a9.chunk.js","sourcesContent":["export const API_URL = 'https://damp-river-81166.herokuapp.com/api';\r\nexport const BASE_URL = 'https://damp-river-81166.herokuapp.com/';\r\n","import axios from 'axios';\r\nimport { API_URL } from '../config';\r\n\r\n//action name creator\r\nconst reducerName = 'posts';\r\nconst createActionName = name => `app/${reducerName}/${name}`;\r\n\r\n/*  INITIAL STATE  */\r\n\r\nconst initialState = {\r\n  data: [],\r\n  request: {\r\n    pending: false,\r\n    error: null,\r\n    success: null,\r\n  },\r\n  singlePost: {},\r\n  amount: 0,\r\n  postsPerPage: 10,\r\n  presentPage: 1,\r\n};\r\n\r\n/*  SELECTORS  */\r\n\r\nexport const getPosts = ({ posts }) => posts.data;\r\nexport const getPostsCount = ({ posts }) => posts.amount;\r\nexport const getSinglePost = ({ posts }) => posts.singlePost;\r\nexport const getRequest = ({ posts }) => posts.request;\r\nexport const getPages = ({ posts }) => Math.ceil(posts.amount / posts.postsPerPage);\r\nexport const getPresentPage = ({ posts }) => posts.presentPage;\r\n\r\n/*  ACTIONS  */\r\n\r\nexport const LOAD_POSTS = createActionName('LOAD_POSTS');\r\nexport const LOAD_SINGLE_POST = createActionName('LOAD_SINGLE_POST');\r\nexport const LOAD_POSTS_PAGE = createActionName('LOAD_POSTS_PAGE');\r\nexport const START_REQUEST = createActionName('START_REQUEST');\r\nexport const END_REQUEST = createActionName('END_REQUEST');\r\nexport const ERROR_REQUEST = createActionName('ERROR_REQUEST');\r\nexport const RESET_REQUEST = createActionName('RESET_REQUEST');\r\n\r\nexport const loadPosts = payload => ({ payload, type: LOAD_POSTS });\r\nexport const loadSinglePost = post => ({ post, type: LOAD_SINGLE_POST });\r\nexport const loadPostsByPage = payload => ({ payload, type: LOAD_POSTS_PAGE });\r\nexport const startRequest = () => ({ type: START_REQUEST });\r\nexport const endRequest = () => ({ type: END_REQUEST });\r\nexport const errorRequest = error => ({ error, type: ERROR_REQUEST });\r\nexport const resetRequest = () => ({ type: RESET_REQUEST });\r\n\r\n/*  THUNKS  */\r\n// commented-out lines are to simulate slow response\r\n\r\nexport const loadPostsRequest = () => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n      let res = await axios.get(`${API_URL}/posts`);\r\n      // await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n      dispatch(loadPosts(res.data));\r\n      dispatch(endRequest());\r\n    }\r\n    catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const loadSinglePostRequest = id => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n      let res = await axios.get(`${API_URL}/posts/${id}`);\r\n      // await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n      dispatch(loadSinglePost(res.data));\r\n      dispatch(endRequest());\r\n    }\r\n    catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const loadRandomPostRequest = () => {\r\n    return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n      let res = await axios.get(`${API_URL}/posts/random`);\r\n      // await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n      dispatch(loadSinglePost(res.data));\r\n      dispatch(endRequest());\r\n    }\r\n    catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const loadPostsByPageRequest = (page, postsNumber) => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n      if(page === undefined) page = 1;\r\n      const postsPerPage = postsNumber || 10;\r\n\r\n      const startAt = (page - 1) * postsPerPage;\r\n      const limit = postsPerPage;\r\n\r\n      let res = await axios.get(`${API_URL}/posts/range/${startAt}/${limit}`);\r\n      // await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n\r\n      const payload = {\r\n        posts: res.data.posts,\r\n        amount: res.data.amount,\r\n        postsPerPage,\r\n        presentPage: page,\r\n      };\r\n\r\n      dispatch(loadPostsByPage(payload));\r\n      dispatch(endRequest());\r\n    }\r\n    catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const addPostRequest = post => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n      // let res = \r\n      await axios.post(`${API_URL}/posts`, post);\r\n      // await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n      dispatch(endRequest());\r\n    }\r\n    catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const editPostRequest = (post, id) => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n      await axios.post(`${API_URL}/posts/${id}`, post);\r\n      // await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n      dispatch(endRequest());\r\n    }\r\n    catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const deletePostRequest = id => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n      await axios.delete(`${API_URL}/posts/${id}`);\r\n      // await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n      dispatch(endRequest());\r\n    }\r\n    catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\n/*  REDUCER  */\r\n\r\nexport default function reducer(statePart = initialState, action = {}) {\r\n  switch (action.type) {\r\n\r\n    case LOAD_POSTS:\r\n      return { ...statePart, data: action.payload };\r\n\r\n    case LOAD_SINGLE_POST:\r\n      return { ...statePart, singlePost: action.post };\r\n\r\n    case START_REQUEST:\r\n      return { ...statePart, request: { pending: true, error: null, success: null } };\r\n\r\n    case END_REQUEST:\r\n      return { ...statePart, request: { pending: false, error: null, success: true } };\r\n\r\n    case ERROR_REQUEST:\r\n      return { ...statePart, request: { pending: false, error: action.error, success: false }};\r\n\r\n    case RESET_REQUEST:\r\n      return { ...statePart, request: { pending: false, error: null, success: null }, singlePost: {} };\r\n\r\n    case LOAD_POSTS_PAGE:\r\n      return {\r\n        ...statePart,\r\n        postsPerPage: action.payload.postsPerPage,\r\n        presentPage: action.payload.presentPage,\r\n        amount: action.payload.amount,\r\n        data: [...action.payload.posts],\r\n      };\r\n\r\n    default:\r\n      return statePart;\r\n  };\r\n};\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n//  import reducers\r\nimport posts from './postsRedux';\r\n\r\n//  combine reducers\r\nconst rootReducer = combineReducers({\r\n  posts,\r\n});\r\n\r\n//  create store\r\nconst store = createStore(\r\n  rootReducer, \r\n  compose(\r\n    applyMiddleware(thunk),\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageContainer.scss';\n\nconst PageContainer = ({ children }) => (\n  <div className=\"container-fluid\">\n    {children}\n  </div>\n);\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import React from 'react'\r\n\r\nimport './Logo.scss';\r\n\r\nconst Logo = ({ links, location }) => (\r\n  <h1 className=\"logo\">Blog.app</h1>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './MainMenu.scss';\r\n\r\nconst MainMenu = ({ links, location }) => (\r\n  <ul className=\"main-menu\">\r\n    { links.map((link, index) =>\r\n      <li key={index}>\r\n        <Link className={(location.pathname === link.path && 'active') || ''} to={link.path}>{link.title}</Link>\r\n      </li>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nMainMenu.propTypes = {\r\n  links: PropTypes.arrayOf(PropTypes.shape({\r\n    path: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n\r\nexport default withRouter(props => <MainMenu {...props}/>);\r\n","import React from 'react';\r\nimport Logo from '../../common/Logo/Logo';\r\nimport MainMenu from '../../layout/MainMenu/MainMenu';\r\nimport './NavBar.scss';\r\n\r\nclass NavBar extends React.Component {\r\n  state = {\r\n    links: [\r\n      { path: '/', title: 'Home' },\r\n      { path: '/posts', title: 'Posts' },\r\n      { path: '/posts/random', title: 'Random post' },\r\n      { path: '/posts/new', title: 'Add post' },\r\n      { path: '/contact', title: 'Contact' }\r\n    ],\r\n  }\r\n\r\n  render() {\r\n    const { links } = this.state;\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <Logo />\r\n        <MainMenu links={links} />\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport PageContainer from '../PageContainer/PageContainer';\r\nimport NavBar from '../../features/NavBar/NavBar';\r\n\r\nconst MainLayout = ({ children }) => (\r\n  <div>\r\n    <PageContainer>\r\n      <NavBar />\r\n      {children}\r\n    </PageContainer>\r\n  </div>\r\n);\r\n\r\nexport default MainLayout;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageTitle.scss';\n\nconst PageTitle = ({ children }) => (\n  <h1 className=\"page-title\">\n     {children}\n  </h1>\n);\n\nPageTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default PageTitle;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({ variant = '', children, ...otherProps }) => (\r\n  <button { ...otherProps } className={ `button button--${variant}`}>\r\n    { children }\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SmallTitle.scss';\n\nconst SmallTitle = ({ children, ...otherProps }) => (\n  <h2 {...otherProps} className=\"small-title\">\n    { children }\n  </h2>\n);\n\nSmallTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default SmallTitle;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nconst HtmlBox = ({ children, ...otherProps }) => (\r\n  <div {...otherProps} className=\"html-box\">\r\n    {ReactHtmlParser(children)}\r\n  </div>\r\n);\r\n\r\nHtmlBox.propTypes ={\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default HtmlBox;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Button from '../../common/Button/Button';\r\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport cutText from '../../../utils/cutText';\r\nimport './PostSummary.scss';\r\n\r\nconst PostSummary = ({ id, title, content, author }) => (\r\n  <article className=\"post-summary\">\r\n    <Link to={`posts/${id}`}>\r\n      <SmallTitle>{title}</SmallTitle>\r\n    </Link>\r\n    <p className=\"post-author\">Author: {author}</p>\r\n    <HtmlBox className=\"post-content\">{cutText(content, 250)}</HtmlBox>\r\n    <Link to={`posts/${id}`}>\r\n      <Button variant=\"primary\">\r\n        Read more\r\n      </Button>\r\n    </Link>\r\n    <Link to={`posts/edit/${id}`}>\r\n      <Button variant=\"primary\">\r\n        Update post\r\n      </Button>\r\n    </Link>\r\n  </article>\r\n);\r\n\r\nPostSummary.propTypes = {\r\n  id: PropTypes.string,\r\n  title: PropTypes.string,\r\n  content: PropTypes.string,\r\n  author: PropTypes.string,\r\n};\r\n\r\nexport default PostSummary;","export default (content, maxLength) => {\r\n  return maxLength < 1 ? 'The content must be longer than 1 symbol.' : (\r\n    content.length <= maxLength ? content : content.substr(0, content.lastIndexOf(' ', maxLength)) + '...'\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport PostSummary from '../PostSummary/PostSummary';\r\n\r\nconst PostsList = ({ posts }) => (\r\n  <div>\r\n    <section className=\"posts-list\">\r\n      {posts ? posts.map(post => <PostSummary key={post.id} {...post} />) : null}\r\n    </section>\r\n  </div>\r\n);\r\n\r\nPostsList.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default PostsList;","import React from 'react';\nimport { Animated } from 'react-animated-css';\n\nimport './Spinner.scss';\n\nconst Spinner = () => (\n  <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\n    <div className=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </Animated>\n);\n\nexport default Spinner;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Animated } from 'react-animated-css';\r\nimport { MdInfoOutline, MdDone, MdErrorOutline } from 'react-icons/md';\r\n\r\nimport './Alert.scss';\r\n\r\nconst Alert = ({ variant = '', children, ...otherProps }) => {\r\n\r\n  const icon = () => {\r\n    switch(variant) {\r\n      case 'info':\r\n        return <MdInfoOutline />\r\n      case 'success':\r\n        return <MdDone />\r\n      case 'warning':\r\n        return <MdErrorOutline />\r\n      case 'error':\r\n        return <MdErrorOutline />\r\n      default:\r\n        return <MdInfoOutline />\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n      <div {...otherProps} className={`alert alert--${variant}`}>\r\n        {icon()}\r\n        <span className=\"alert__desc\">{children}</span>\r\n      </div>\r\n    </Animated>\r\n  )\r\n\r\n};\r\n\r\nAlert.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Pagination.scss';\r\n\r\nclass Pagination extends React.Component {\r\n\r\n  state = {\r\n    presentPage: this.props.initialPage || 1,\r\n    visible: this.props.visible === false ? false : true,\r\n  }\r\n\r\n  changePage = newPage => {\r\n    const { onPageChange } = this.props;\r\n\r\n    this.setState({ presentPage: newPage });\r\n    onPageChange(newPage);\r\n  }\r\n\r\n  render() {\r\n    const { pages } = this.props;\r\n    const { presentPage, visible } = this.state;\r\n    const { changePage } = this;\r\n\r\n    return (\r\n      <div className=\"pagination\">\r\n      {visible && <ul className=\"pagination__list\">\r\n\r\n        {presentPage !== 1 &&\r\n          <li \r\n            key={0}\r\n            onClick={() => { changePage(presentPage - 1) }}\r\n            className='pagination__list__item 0'>\r\n            &#8249;\r\n          </li>\r\n        }\r\n        {[...Array(pages)].map((el, page) =>\r\n          <li \r\n            key={++page}\r\n            onClick={() => { changePage(page) }}\r\n            className={`pagination__list__item${((page) === presentPage) ? ' pagination__list__item--active' : ''}`}>\r\n            {page}\r\n          </li>\r\n        )}\r\n        {presentPage !== pages &&\r\n          <li \r\n            key={'last'}\r\n            onClick={() => { changePage(presentPage + 1) }}\r\n            className='pagination__list__item last'>\r\n            &#8250;\r\n          </li>\r\n        }\r\n\r\n        </ul>\r\n      }\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nPagination.propTypes = {\r\n  pages: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  initialPage: PropTypes.number,\r\n  visible: PropTypes.bool,\r\n};\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport PostsList from '../PostsList/PostsList';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Pagination from '../../common/Pagination/Pagination';\r\n\r\nclass Posts extends React.Component {\r\n\r\n  state = {\r\n    initialPage: 1,\r\n    postsNumber: this.props.postsPerPage || 10,\r\n    pagination: this.props.pagination  === false ? false : true,\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { loadPostsByPage } = this.props;\r\n    const { initialPage, postsNumber } = this.state;\r\n    loadPostsByPage(initialPage, postsNumber);\r\n  }\r\n\r\n  loadPostPage = page => {\r\n    const { loadPostsByPage } = this.props;\r\n    loadPostsByPage(page);\r\n  }\r\n\r\n  render() {\r\n    const { pending, error, success } = this.props.request;\r\n    const { posts, pages } = this.props;\r\n    const { loadPostPage } = this;\r\n    const { pagination, } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {(pending || !success) && <Spinner />}\r\n        <ul>\r\n          {!pending && success && posts && \r\n            <div>\r\n              <PostsList posts={posts} />\r\n            </div>\r\n          }\r\n        </ul>\r\n        {!pending && error && <Alert variant=\"error\">{error}</Alert>}\r\n        {!pending && success && (posts.length === 0) && <Alert variant=\"info\">No posts</Alert>}\r\n        <Pagination pages={pages}\r\n          onPageChange={loadPostPage}\r\n          visible={pagination}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nPosts.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  loadPostsByPage: PropTypes.func.isRequired,\r\n  request: PropTypes.object.isRequired,\r\n  pages: PropTypes.number.isRequired,\r\n  postsPerPage: PropTypes.number,\r\n  pagination: PropTypes.bool,\r\n};\r\n\r\nexport default Posts;","import { connect } from 'react-redux';\r\nimport { getPosts, getPages, getRequest, loadPostsByPageRequest } from '../../../redux/postsRedux';\r\nimport Posts from './Posts';\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: getPosts(state),\r\n  request: getRequest(state),\r\n  pages: getPages(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadPostsByPage: (page, postsNumber) => dispatch(loadPostsByPageRequest(page, postsNumber)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport Posts from '../../features/Posts/PostsContainer';\r\n\r\nconst HomePage = () => (\r\n  <div>\r\n    <div>\r\n      <PageTitle>Blog</PageTitle>\r\n      <Posts postsPerPage={3} pagination={false} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nclass PostsCounter extends React.Component {\r\n\r\n  render() {\r\n    const { postsCount } = this.props;\r\n\r\n    return (\r\n      <div className=\"PostsCounter\">\r\n      {postsCount ? \r\n        <div>Posts: {postsCount}</div>\r\n      :\r\n        <div>No posts found</div>\r\n      }\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\n\r\nPostsCounter.propTypes = {\r\n  postsCount: PropTypes.number.isRequired\r\n};\r\n\r\nexport default PostsCounter;","import { connect } from 'react-redux';\r\nimport { getPostsCount } from '../../../redux/postsRedux';\r\nimport PostsCounter from './PostsCounter';\r\n\r\nconst mapStateToProps = state => ({\r\n  postsCount: getPostsCount(state),\r\n})\r\n\r\nexport default connect(mapStateToProps)(PostsCounter);\r\n","import React from 'react';\r\n\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport PostsCounter from '../../features/PostsCounter/PostsCounterContainer';\r\nimport Posts from '../../features/Posts/PostsContainer';\r\n\r\nconst PostsPage = () => (\r\n  <div>\r\n    <PageTitle>Posts list</PageTitle>\r\n    <PostsCounter />\r\n    <Posts />\r\n  </div>\r\n);\r\n\r\nexport default PostsPage;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { FacebookProvider, Comments, ShareButton } from 'react-facebook';\r\nimport { BASE_URL } from '../../../config';\r\n\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Button from '../../common/Button/Button';\r\n\r\nclass SinglePost extends React.Component {\r\n\r\n  state = {\r\n    isMounted: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { loadSinglePost, match, loadRandomPost } = this.props;\r\n    match !== 'random' ? loadSinglePost(match) : loadRandomPost();\r\n    this.setState({ isMounted: true });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({ isMounted: false });\r\n  }\r\n\r\n  render() {\r\n    const { singlePost, location } = this.props;\r\n    const { title, author, content } = this.props.singlePost;\r\n    const { pending, error, success } = this.props.request;\r\n    const { isMounted } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {(pending || !success) && <Spinner />}\r\n        {!pending && success && singlePost && \r\n          <div>\r\n            <PageTitle>{title}</PageTitle> \r\n            <p className=\"post-author\">Author: {author}</p>\r\n            <HtmlBox className=\"post-content\">{content}</HtmlBox>\r\n            {isMounted &&\r\n            <FacebookProvider appId=\"903746783320802\">\r\n              <Comments href={`${BASE_URL}/${location.pathname}`} />\r\n              <Link to={'/posts'}>\r\n                <Button variant=\"primary\">\r\n                  Back to posts\r\n                </Button>\r\n              </Link>\r\n              <ShareButton className=\"button button--primary\" href={`${BASE_URL}/${location.pathname}`}>\r\n                Share on Facebook\r\n              </ShareButton>\r\n            </FacebookProvider>\r\n            }\r\n          </div>\r\n        }\r\n        {!pending && error && <Alert variant=\"error\">{error}</Alert>}\r\n        {!pending && success && !singlePost && <Alert variant=\"info\">Post not found</Alert>}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nSinglePost.propTypes = {\r\n  singlePost: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    title: PropTypes.string,\r\n    content: PropTypes.string,\r\n    author: PropTypes.string,\r\n  }),\r\n  request: PropTypes.object.isRequired,\r\n  loadSinglePost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SinglePost;","import { connect } from 'react-redux';\r\nimport { getSinglePost, getRequest, loadSinglePostRequest, loadRandomPostRequest } from '../../../redux/postsRedux';\r\nimport SinglePost from './SinglePost';\r\n\r\nconst mapStateToProps = state => ({\r\n  singlePost: getSinglePost(state),\r\n  request: getRequest(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadSinglePost: (id) => dispatch(loadSinglePostRequest(id)),\r\n  loadRandomPost: () => dispatch(loadRandomPostRequest()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SinglePost);\r\n","import React from 'react';\r\nimport SinglePost from '../../features/SinglePost/SinglePostContainer';\r\n\r\nconst SinglePostPage = props => (\r\n  <div>\r\n    <SinglePost location={props.location} match={props.match.params.id} />\r\n  </div>\r\n);\r\n\r\nexport default SinglePostPage;","import React from 'react';\r\nimport SinglePost from '../../features/SinglePost/SinglePostContainer';\r\n\r\nconst RandomPostPage = props => (\r\n  <div>\r\n    <SinglePost location={props.location} match={'random'} />\r\n  </div>\r\n);\r\n\r\nexport default RandomPostPage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TextField.scss';\r\n\r\nconst TextField = ({ value, label, onChange, ...otherProps }) => (\r\n  <label className=\"text-field\">\r\n    <span className={`text-field__label ${(!value.length > 0) ? 'text-field__label--big' : ''}`}>{label}</span>\r\n    <input {...otherProps} value={value} onChange={onChange} className=\"text-field__input\" />\r\n  </label>\r\n);\r\n\r\nTextField.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TextField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SectionTitle.scss';\r\n\r\nconst SectionTitle = ({ children }) => (\r\n  <h2 className=\"section-title\">\r\n     {children}\r\n  </h2>\r\n);\r\n\r\nSectionTitle.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default SectionTitle;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport Editor from 'react-medium-editor';\r\nimport 'medium-editor/dist/css/medium-editor.css';\r\nimport 'medium-editor/dist/css/themes/default.css';\r\n\r\nimport TextField from '../../common/TextField/TextField';\r\nimport SectionTitle from '../../common/SectionTitle/SectionTitle';\r\nimport Button from '../../common/Button/Button';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport './PostForm.scss';\r\n\r\nclass PostForm extends React.Component {\r\n\r\n  state = {\r\n    post: {\r\n      title: '',\r\n      author: '',\r\n      content: ''\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { resetRequest, loadSinglePost, match } = this.props;\r\n    resetRequest();\r\n    if(match.params.id) await loadSinglePost(match.params.id);\r\n    const { singlePost } = this.props;\r\n    if(match.params.id) this.setState({ post: singlePost });\r\n  }\r\n\r\n  handleChange = e => {\r\n    const { post } = this.state;\r\n    this.setState({ post: { ...post, [e.target.name]: e.target.value } });\r\n  }\r\n\r\n  handleEditor = text => {\r\n    const { post } = this.state;\r\n    this.setState({ post: { ...post, content: text  }});\r\n  }\r\n\r\n  handlePostSubmit = e => {\r\n    const { addPost, editPost, match, resetRequest } = this.props;\r\n    const { post } = this.state;\r\n\r\n    e.preventDefault();\r\n    if (match.params.id) {\r\n      resetRequest();\r\n      editPost(post, match.params.id);\r\n    }\r\n    else addPost(post);\r\n  }\r\n\r\n  handlePostDelete = id => {\r\n    const { resetRequest, deletePost } = this.props;\r\n    resetRequest();\r\n    deletePost(id);\r\n  }\r\n\r\n  render() {\r\n    const { post } = this.state;\r\n    const { handleChange, handleEditor, handlePostSubmit, handlePostDelete } = this;\r\n    const { request, match, singlePost } = this.props;\r\n\r\n    if(request.error) return <Alert variant=\"error\">{request.error}</Alert>\r\n    else if(!singlePost.title && request.success) return <Alert variant=\"success\">{!match.params.id ? 'Post has been added!' : 'Post has been updated!'}</Alert>\r\n    else if(request.pending) return <Spinner />\r\n    else return (\r\n      <form onSubmit={handlePostSubmit}>\r\n        <TextField\r\n          label=\"Title\"\r\n          value={post.title}\r\n          onChange={handleChange}\r\n          name=\"title\"\r\n        />\r\n        <TextField\r\n          label=\"Author\"\r\n          value={post.author}\r\n          onChange={handleChange}\r\n          name=\"author\"\r\n        />\r\n        <SectionTitle>Edit post content</SectionTitle>\r\n        <Editor\r\n          className=\"content-editor\"\r\n          text={post.content}\r\n          onChange={handleEditor}\r\n          options={{ placeholder: false, toolbar: { buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3'] } }}\r\n        />\r\n        <Button variant=\"primary\">{!match.params.id ? 'Add post' : 'Update post'}</Button>\r\n        {match.params.id && <button type=\"button\" onClick={(id) => handlePostDelete(match.params.id)} className=\"button button--danger\">Delete post</button>}\r\n      </form>\r\n    );\r\n  }\r\n};\r\n\r\nPostForm.propTypes = {\r\n  request: PropTypes.object.isRequired,\r\n  addPost: PropTypes.func.isRequired,\r\n  editPost: PropTypes.func.isRequired,\r\n  singlePost: PropTypes.object,\r\n  match: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default PostForm;\r\n","import { connect } from 'react-redux';\r\nimport { getRequest, addPostRequest, getSinglePost, loadSinglePostRequest, editPostRequest, resetRequest, deletePostRequest } from '../../../redux/postsRedux';\r\nimport PostForm from './PostForm';\r\n\r\nconst mapStateToProps = state => ({\r\n  request: getRequest(state),\r\n  singlePost: getSinglePost(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addPost: (post) => dispatch(addPostRequest(post)),\r\n  loadSinglePost: (id) => dispatch(loadSinglePostRequest(id)),\r\n  editPost: (post, id) => dispatch(editPostRequest(post, id)),\r\n  resetRequest: () => dispatch(resetRequest()),\r\n  deletePost: (id) => dispatch(deletePostRequest(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);\r\n","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport PostForm from '../../features/PostForm/PostFormContainer';\r\n\r\nconst AddPostPage = props => (\r\n  <div>\r\n    <PageTitle>Add post</PageTitle>\r\n    <PostForm match={props.match} />\r\n  </div>\r\n);\r\n\r\nexport default AddPostPage;","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport PostForm from '../../features/PostForm/PostFormContainer';\r\n\r\nconst EditPostPage = props => (\r\n  <div>\r\n    <PageTitle>Edit post</PageTitle>\r\n    <PostForm match={props.match} />\r\n  </div>\r\n);\r\n\r\nexport default EditPostPage;\r\n","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\n\r\nconst ContactPage = () => (\r\n  <div>\r\n    <PageTitle>Contact</PageTitle>\r\n    <div className=\"contact-content\">\r\n      <div className=\"address\">\r\n        Your Favourite Blog Page Ltd.<br/>\r\n        314 Pennsylvania Avenue<br/>\r\n        Washington, WA 200001<br/>\r\n      </div>\r\n      <p>Mobile Number: <a href=\"tel:+02079143411\">207-914-3411</a></p>\r\n    </div>\r\n    <a href=\"https://github.com/kajpawl/\" style={{ position: \"fixed\", bottom: \"26px\", left: 0, right: 0, textAlign: \"center\", fontSize: \"14px\" }}>© Kajetan Pawliszyn 2019</a>\r\n  </div>\r\n);\r\n\r\nexport default ContactPage;","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n  <div>\r\n    <h1>404 Not Found</h1>\r\n  </div>\r\n);\r\n\r\nexport default NotFoundPage;","import { Component } from 'react';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass ScrollToTop extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    const { location } = this.props;\r\n    if (location.pathname !== prevProps.location.pathname) {\r\n      window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n      });\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  };\r\n};\r\n\r\nexport default withRouter(ScrollToTop);\r\n\r\n\r\n\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport MainLayout from './components/layout/MainLayout/MainLayout';\n\n// import routes\nimport Home from './components/pages/Home/HomePage';\nimport Posts from './components/pages/Posts/PostsPage';\nimport SinglePost from './components/pages/SinglePost/SinglePostPage';\nimport RandomPost from './components/pages/RandomPost/RandomPostPage';\nimport AddPost from './components/pages/AddPost/AddPostPage';\nimport EditPost from './components/pages/EditPost/EditPostPage';\nimport Contact from './components/pages/Contact/ContactPage';\nimport NotFound from './components/pages/NotFound/NotFoundPage';\n\n// reset state.request on changing page\nimport ScrollToTop from './components/features/ScrollToTop/ScrollToTop';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <ScrollToTop>\n        <MainLayout>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/posts\" exact component={Posts} />\n            <Route path=\"/posts/random\" exact component={RandomPost} />\n            <Route path=\"/posts/new\" exact component={AddPost} />\n            <Route path=\"/posts/edit/:id\" exact component={EditPost} />\n            <Route path=\"/posts/:id\" exact component={SinglePost} />\n            <Route path=\"/contact\" exact component={Contact} />\n            <Route component={NotFound} />\n          </Switch>\n        </MainLayout>\n      </ScrollToTop>\n    );\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\nimport 'animate.css/animate.min.css';\nimport './styles/global.scss';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}