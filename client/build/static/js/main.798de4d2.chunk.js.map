{"version":3,"sources":["config.js","redux/postsRedux.js","redux/store.js","components/layout/PageContainer/PageContainer.js","components/common/Logo/Logo.js","components/layout/MainMenu/MainMenu.js","components/features/NavBar/NavBar.js","components/layout/MainLayout/MainLayout.js","components/common/PageTitle/PageTitle.js","components/common/Button/Button.js","components/features/RatePost/RatePost.js","components/common/SmallTitle/SmallTitle.js","components/common/HtmlBox/HtmlBox.js","components/features/PostSummary/PostSummary.js","utils/cutText.js","components/features/PostsList/PostsList.js","components/common/Spinner/Spinner.js","components/common/Alert/Alert.js","components/common/Pagination/Pagination.js","components/features/Posts/Posts.js","components/features/Posts/PostsContainer.js","components/pages/Home/HomePage.js","components/features/PostsCounter/PostsCounter.js","components/features/PostsCounter/PostsCounterContainer.js","components/pages/Posts/PostsPage.js","components/features/SinglePost/SinglePost.js","components/features/SinglePost/SinglePostContainer.js","components/pages/SinglePost/SinglePostPage.js","components/pages/RandomPost/RandomPostPage.js","components/common/TextField/TextField.js","components/common/SectionTitle/SectionTitle.js","components/features/PostForm/PostForm.js","components/features/PostForm/PostFormContainer.js","components/pages/AddPost/AddPostPage.js","components/pages/EditPost/EditPostPage.js","components/pages/Contact/ContactPage.js","components/pages/NotFound/NotFoundPage.js","components/features/ScrollToTop/ScrollToTop.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","BASE_URL","createActionName","name","concat","initialState","data","request","pending","error","success","singlePost","amount","postsPerPage","presentPage","getSinglePost","_ref3","posts","getRequest","_ref4","getPages","_ref5","Math","ceil","LOAD_POSTS","LOAD_SINGLE_POST","LOAD_POSTS_PAGE","START_REQUEST","END_REQUEST","ERROR_REQUEST","RESET_REQUEST","RATE_POST","loadSinglePost","post","type","loadPostsByPage","payload","startRequest","endRequest","errorRequest","ratePost","value","id","loadSinglePostRequest","_ref8","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","res","wrap","_context2","prev","next","axios","get","sent","t0","message","stop","_x2","apply","this","arguments","ratePostRequest","_ref13","_callee7","_context7","put","_x7","rootReducer","combineReducers","statePart","length","undefined","action","objectSpread","toConsumableArray","rating","updatedData","map","rate","store","createStore","compose","applyMiddleware","thunk","PageContainer","_ref","children","react_default","createElement","className","Logo","links","location","MainMenu","link","index","key","react_router_dom","pathname","path","to","title","withRouter","props","MainMenu_MainMenu_MainMenu","NavBar","state","common_Logo_Logo","layout_MainMenu_MainMenu","React","Component","MainLayout","layout_PageContainer_PageContainer","features_NavBar_NavBar","PageTitle","Button","_ref$variant","variant","otherProps","objectWithoutProperties","assign","RatePost","common_Button_Button","onClick","SmallTitle","HtmlBox","ReactHtmlParser","PostSummary","content","author","common_SmallTitle_SmallTitle","common_HtmlBox_HtmlBox","maxLength","substr","lastIndexOf","cutText","features_RatePost_RatePost","PostsList","features_PostSummary_PostSummary","Spinner","react_animated_css_lib","animationIn","animationOut","Alert","index_esm","icon","Pagination","_this","initialPage","visible","changePage","newPage","onPageChange","setState","pages","_this$state","Array","el","page","Posts","postsNumber","pagination","loadPostPage","_this$props$request","_this$props","common_Spinner_Spinner","features_PostsList_PostsList","common_Alert_Alert","common_Pagination_Pagination","connect","_ref10","_callee4","startAt","limit","_context4","_x4","loadPostsByPageRequest","HomePage","common_PageTitle_PageTitle","PostsContainer","PostsCounter","postsCount","_ref2","PostsPage","PostsCounterContainer","SinglePost","isMounted","match","loadRandomPost","_this$props2","_this$props$singlePos","react_facebook_lib","appId","href","_ref9","_callee3","_context3","_x3","SinglePostPage","SinglePostContainer","params","RandomPostPage","TextField","label","onChange","SectionTitle","PostForm","handleChange","e","defineProperty","target","handleEditor","text","handlePostSubmit","addPost","editPost","resetRequest","preventDefault","handlePostDelete","deletePost","_this$props4","onSubmit","common_TextField_TextField","common_SectionTitle_SectionTitle","react_medium_editor_default","options","placeholder","toolbar","buttons","_ref11","_callee5","_context5","_x5","addPostRequest","_ref12","_callee6","_context6","_x6","editPostRequest","_ref14","_callee8","_context8","delete","_x8","deletePostRequest","AddPostPage","PostFormContainer","EditPostPage","ContactPage","style","position","bottom","left","right","textAlign","fontSize","NotFoundPage","ScrollToTop","prevProps","window","scrollTo","top","App","features_ScrollToTop_ScrollToTop","layout_MainLayout_MainLayout","react_router","exact","component","Home","RandomPost","AddPost","EditPost","Contact","NotFound","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","es","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.798de4d2.chunk.js","sourcesContent":["export const API_URL = 'https://damp-river-81166.herokuapp.com/api';\r\nexport const BASE_URL = 'https://damp-river-81166.herokuapp.com';\r\n","import axios from 'axios';\r\nimport { API_URL } from '../config';\r\n\r\n//action name creator\r\nconst reducerName = 'posts';\r\nconst createActionName = name => `app/${reducerName}/${name}`;\r\n\r\n/*  INITIAL STATE  */\r\n\r\nconst initialState = {\r\n  data: [],\r\n  request: {\r\n    pending: false,\r\n    error: null,\r\n    success: null,\r\n  },\r\n  singlePost: {},\r\n  amount: 0,\r\n  postsPerPage: 10,\r\n  presentPage: 1,\r\n};\r\n\r\n/*  SELECTORS  */\r\n\r\nexport const getPosts = ({ posts }) => posts.data;\r\nexport const getPostsCount = ({ posts }) => posts.amount;\r\nexport const getSinglePost = ({ posts }) => posts.singlePost;\r\nexport const getRequest = ({ posts }) => posts.request;\r\nexport const getPages = ({ posts }) => Math.ceil(posts.amount / posts.postsPerPage);\r\nexport const getPresentPage = ({ posts }) => posts.presentPage;\r\n\r\n/*  ACTIONS  */\r\n\r\nexport const LOAD_POSTS = createActionName('LOAD_POSTS');\r\nexport const LOAD_SINGLE_POST = createActionName('LOAD_SINGLE_POST');\r\nexport const LOAD_POSTS_PAGE = createActionName('LOAD_POSTS_PAGE');\r\nexport const START_REQUEST = createActionName('START_REQUEST');\r\nexport const END_REQUEST = createActionName('END_REQUEST');\r\nexport const ERROR_REQUEST = createActionName('ERROR_REQUEST');\r\nexport const RESET_REQUEST = createActionName('RESET_REQUEST');\r\nexport const RATE_POST = createActionName('RATE_POST');\r\n\r\nexport const loadPosts = payload => ({ payload, type: LOAD_POSTS });\r\nexport const loadSinglePost = post => ({ post, type: LOAD_SINGLE_POST });\r\nexport const loadPostsByPage = payload => ({ payload, type: LOAD_POSTS_PAGE });\r\nexport const startRequest = () => ({ type: START_REQUEST });\r\nexport const endRequest = () => ({ type: END_REQUEST });\r\nexport const errorRequest = error => ({ error, type: ERROR_REQUEST });\r\nexport const resetRequest = () => ({ type: RESET_REQUEST });\r\nexport const ratePost = (value, id) => ( { value, id, type: RATE_POST });\r\n\r\n/*  THUNKS  */\r\n// commented-out lines are to simulate slow response\r\n\r\nexport const loadPostsRequest = () => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n      let res = await axios.get(`${API_URL}/posts`);\r\n      // await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n      dispatch(loadPosts(res.data));\r\n      dispatch(endRequest());\r\n    }\r\n    catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const loadSinglePostRequest = id => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n      let res = await axios.get(`${API_URL}/posts/${id}`);\r\n      // await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n      dispatch(loadSinglePost(res.data));\r\n      dispatch(endRequest());\r\n    }\r\n    catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const loadRandomPostRequest = () => {\r\n    return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n      let res = await axios.get(`${API_URL}/posts/random`);\r\n      // await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n      dispatch(loadSinglePost(res.data));\r\n      dispatch(endRequest());\r\n    }\r\n    catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const loadPostsByPageRequest = (page, postsNumber) => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n      if(page === undefined) page = 1;\r\n      const postsPerPage = postsNumber || 10;\r\n\r\n      const startAt = (page - 1) * postsPerPage;\r\n      const limit = postsPerPage;\r\n\r\n      let res = await axios.get(`${API_URL}/posts/range/${startAt}/${limit}`);\r\n      // await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n\r\n      const payload = {\r\n        posts: res.data.posts,\r\n        amount: res.data.amount,\r\n        postsPerPage,\r\n        presentPage: page,\r\n      };\r\n\r\n      dispatch(loadPostsByPage(payload));\r\n      dispatch(endRequest());\r\n    }\r\n    catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const addPostRequest = post => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n      // let res = \r\n      await axios.post(`${API_URL}/posts`, post);\r\n      // await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n      dispatch(endRequest());\r\n    }\r\n    catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const editPostRequest = (post, id) => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n      await axios.put(`${API_URL}/posts/${id}`, post);\r\n      // await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n      dispatch(endRequest());\r\n    }\r\n    catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const ratePostRequest = (value, id) => {\r\n  return async dispatch => {\r\n\r\n    try {\r\n      await axios.put(`${API_URL}/posts/${value}/${id}`);\r\n      dispatch(ratePost(value, id));\r\n    }\r\n    catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const deletePostRequest = id => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n      await axios.delete(`${API_URL}/posts/${id}`);\r\n      // await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n      dispatch(endRequest());\r\n    }\r\n    catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\n/*  REDUCER  */\r\n\r\nexport default function reducer(statePart = initialState, action = {}) {\r\n  switch (action.type) {\r\n\r\n    case LOAD_POSTS:\r\n      return { ...statePart, data: action.payload };\r\n\r\n    case LOAD_SINGLE_POST:\r\n      return { ...statePart, singlePost: action.post };\r\n\r\n    case START_REQUEST:\r\n      return { ...statePart, request: { pending: true, error: null, success: null } };\r\n\r\n    case END_REQUEST:\r\n      return { ...statePart, request: { pending: false, error: null, success: true } };\r\n\r\n    case ERROR_REQUEST:\r\n      return { ...statePart, request: { pending: false, error: action.error, success: false }};\r\n\r\n    case RESET_REQUEST:\r\n      return { ...statePart, request: { pending: false, error: null, success: null }, singlePost: {} };\r\n\r\n    case LOAD_POSTS_PAGE:\r\n      return {\r\n        ...statePart,\r\n        postsPerPage: action.payload.postsPerPage,\r\n        presentPage: action.payload.presentPage,\r\n        amount: action.payload.amount,\r\n        data: [...action.payload.posts],\r\n      };\r\n\r\n    case RATE_POST:\r\n      const { data, singlePost } = statePart;\r\n      const rating = action.value === 'downvote' ? -1 : 1;\r\n      const updatedData = data.map(post => post.id === action.id ? { ...post, rate: post.rate + rating } : post);\r\n      return { ...statePart, data: updatedData, singlePost: { ...singlePost, rate: singlePost.rate + rating } };\r\n\r\n    default:\r\n      return statePart;\r\n  };\r\n};\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n//  import reducers\r\nimport posts from './postsRedux';\r\n\r\n//  combine reducers\r\nconst rootReducer = combineReducers({\r\n  posts,\r\n});\r\n\r\n//  create store\r\nconst store = createStore(\r\n  rootReducer, \r\n  compose(\r\n    applyMiddleware(thunk),\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageContainer.scss';\n\nconst PageContainer = ({ children }) => (\n  <div className=\"container-fluid\">\n    {children}\n  </div>\n);\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import React from 'react'\r\n\r\nimport './Logo.scss';\r\n\r\nconst Logo = ({ links, location }) => (\r\n  <h1 className=\"logo\">Blog.app</h1>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './MainMenu.scss';\r\n\r\nconst MainMenu = ({ links, location }) => (\r\n  <ul className=\"main-menu\">\r\n    { links.map((link, index) =>\r\n      <li key={index}>\r\n        <Link className={(location.pathname === link.path && 'active') || ''} to={link.path}>{link.title}</Link>\r\n      </li>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nMainMenu.propTypes = {\r\n  links: PropTypes.arrayOf(PropTypes.shape({\r\n    path: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n\r\nexport default withRouter(props => <MainMenu {...props}/>);\r\n","import React from 'react';\r\nimport Logo from '../../common/Logo/Logo';\r\nimport MainMenu from '../../layout/MainMenu/MainMenu';\r\nimport './NavBar.scss';\r\n\r\nclass NavBar extends React.Component {\r\n  state = {\r\n    links: [\r\n      { path: '/', title: 'Home' },\r\n      { path: '/posts', title: 'Posts' },\r\n      { path: '/posts/random', title: 'Random post' },\r\n      { path: '/posts/new', title: 'Add post' },\r\n      { path: '/contact', title: 'Contact' }\r\n    ],\r\n  }\r\n\r\n  render() {\r\n    const { links } = this.state;\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <Logo />\r\n        <MainMenu links={links} />\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport PageContainer from '../PageContainer/PageContainer';\r\nimport NavBar from '../../features/NavBar/NavBar';\r\n\r\nconst MainLayout = ({ children }) => (\r\n  <div>\r\n    <PageContainer>\r\n      <NavBar />\r\n      {children}\r\n    </PageContainer>\r\n  </div>\r\n);\r\n\r\nexport default MainLayout;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageTitle.scss';\n\nconst PageTitle = ({ children }) => (\n  <h1 className=\"page-title\">\n     {children}\n  </h1>\n);\n\nPageTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default PageTitle;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({ variant = '', children, ...otherProps }) => (\r\n  <button { ...otherProps } className={ `button button--${variant}`}>\r\n    { children }\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport Button from '../../common/Button/Button';\r\nimport './RatePost.scss';\r\n\r\nconst RatePost = ({ ratePost, id, rate }) => (\r\n  <div className=\"rating-post\">\r\n    <span>Rate this post:</span>\r\n    <Button variant=\"info\" onClick={() => ratePost('upvote', id)}>+</Button>\r\n    { rate || 0 }\r\n    <Button variant=\"info\" onClick={() => ratePost('downvote', id)}>-</Button>\r\n  </div>\r\n);\r\n\r\nRatePost.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  rate: PropTypes.number,\r\n  ratePost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default RatePost;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SmallTitle.scss';\n\nconst SmallTitle = ({ children, ...otherProps }) => (\n  <h2 {...otherProps} className=\"small-title\">\n    { children }\n  </h2>\n);\n\nSmallTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default SmallTitle;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nconst HtmlBox = ({ children, ...otherProps }) => (\r\n  <div {...otherProps} className=\"html-box\">\r\n    {ReactHtmlParser(children)}\r\n  </div>\r\n);\r\n\r\nHtmlBox.propTypes ={\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default HtmlBox;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport RatePost from '../RatePost/RatePost';\r\nimport Button from '../../common/Button/Button';\r\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport cutText from '../../../utils/cutText';\r\nimport './PostSummary.scss';\r\n\r\nconst PostSummary = ({ id, title, content, author, rate, ratePost }) => (\r\n  <article className=\"post-summary\">\r\n    <Link to={`posts/${id}`}>\r\n      <SmallTitle>{title}</SmallTitle>\r\n    </Link>\r\n    <p className=\"post-author\">Author: {author}</p>\r\n    <HtmlBox className=\"post-content\">{cutText(content, 250)}</HtmlBox>\r\n    <Link to={`posts/${id}`}>\r\n      <Button variant=\"primary\">\r\n        Read more\r\n      </Button>\r\n    </Link>\r\n    <Link to={`posts/edit/${id}`}>\r\n      <Button variant=\"primary\">\r\n        Update post\r\n      </Button>\r\n    </Link>\r\n    <RatePost ratePost={ratePost} id={id} rate={rate} />    \r\n  </article>\r\n);\r\n\r\nPostSummary.propTypes = {\r\n  id: PropTypes.string,\r\n  title: PropTypes.string,\r\n  content: PropTypes.string,\r\n  author: PropTypes.string,\r\n  rate: PropTypes.number,\r\n  ratePost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PostSummary;","export default (content, maxLength) => {\r\n  return maxLength < 1 ? 'The content must be longer than 1 symbol.' : (\r\n    content.length <= maxLength ? content : content.substr(0, content.lastIndexOf(' ', maxLength)) + '...'\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport PostSummary from '../PostSummary/PostSummary';\r\n\r\nconst PostsList = ({ posts, ratePost }) => (\r\n  <div>\r\n    <section className=\"posts-list\">\r\n      {posts ? posts.map(post => <PostSummary key={post.id} {...post} ratePost={ratePost} />) : null}\r\n    </section>\r\n  </div>\r\n);\r\n\r\nPostsList.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n      rate: PropTypes.number,\r\n    })\r\n  ),\r\n  ratePost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PostsList;","import React from 'react';\nimport { Animated } from 'react-animated-css';\n\nimport './Spinner.scss';\n\nconst Spinner = () => (\n  <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\n    <div className=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </Animated>\n);\n\nexport default Spinner;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Animated } from 'react-animated-css';\r\nimport { MdInfoOutline, MdDone, MdErrorOutline } from 'react-icons/md';\r\n\r\nimport './Alert.scss';\r\n\r\nconst Alert = ({ variant = '', children, ...otherProps }) => {\r\n\r\n  const icon = () => {\r\n    switch(variant) {\r\n      case 'info':\r\n        return <MdInfoOutline />\r\n      case 'success':\r\n        return <MdDone />\r\n      case 'warning':\r\n        return <MdErrorOutline />\r\n      case 'error':\r\n        return <MdErrorOutline />\r\n      default:\r\n        return <MdInfoOutline />\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n      <div {...otherProps} className={`alert alert--${variant}`}>\r\n        {icon()}\r\n        <span className=\"alert__desc\">{children}</span>\r\n      </div>\r\n    </Animated>\r\n  )\r\n\r\n};\r\n\r\nAlert.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Pagination.scss';\r\n\r\nclass Pagination extends React.Component {\r\n\r\n  state = {\r\n    presentPage: this.props.initialPage || 1,\r\n    visible: this.props.visible === false ? false : true,\r\n  }\r\n\r\n  changePage = newPage => {\r\n    const { onPageChange } = this.props;\r\n\r\n    this.setState({ presentPage: newPage });\r\n    onPageChange(newPage);\r\n  }\r\n\r\n  render() {\r\n    const { pages } = this.props;\r\n    const { presentPage, visible } = this.state;\r\n    const { changePage } = this;\r\n\r\n    return (\r\n      <div className=\"pagination\">\r\n      {visible && <ul className=\"pagination__list\">\r\n\r\n        {presentPage !== 1 &&\r\n          <li \r\n            key={0}\r\n            onClick={() => { changePage(presentPage - 1) }}\r\n            className='pagination__list__item 0'>\r\n            &#8249;\r\n          </li>\r\n        }\r\n        {[...Array(pages)].map((el, page) =>\r\n          <li \r\n            key={++page}\r\n            onClick={() => { changePage(page) }}\r\n            className={`pagination__list__item${((page) === presentPage) ? ' pagination__list__item--active' : ''}`}>\r\n            {page}\r\n          </li>\r\n        )}\r\n        {presentPage !== pages &&\r\n          <li \r\n            key={'last'}\r\n            onClick={() => { changePage(presentPage + 1) }}\r\n            className='pagination__list__item last'>\r\n            &#8250;\r\n          </li>\r\n        }\r\n\r\n        </ul>\r\n      }\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nPagination.propTypes = {\r\n  pages: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  initialPage: PropTypes.number,\r\n  visible: PropTypes.bool,\r\n};\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport PostsList from '../PostsList/PostsList';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Pagination from '../../common/Pagination/Pagination';\r\n\r\nclass Posts extends React.Component {\r\n\r\n  state = {\r\n    initialPage: 1,\r\n    postsNumber: this.props.postsPerPage || 10,\r\n    pagination: this.props.pagination  === false ? false : true,\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { loadPostsByPage } = this.props;\r\n    const { initialPage, postsNumber } = this.state;\r\n    loadPostsByPage(initialPage, postsNumber);\r\n  }\r\n\r\n  loadPostPage = page => {\r\n    const { loadPostsByPage } = this.props;\r\n    loadPostsByPage(page);\r\n  }\r\n\r\n  render() {\r\n    const { pending, error, success } = this.props.request;\r\n    const { posts, pages, ratePost } = this.props;\r\n    const { loadPostPage } = this;\r\n    const { pagination, } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {(pending || !success) && <Spinner />}\r\n        <ul>\r\n          {!pending && success && posts && \r\n            <div>\r\n              <PostsList posts={posts} ratePost={ratePost} />\r\n            </div>\r\n          }\r\n        </ul>\r\n        {!pending && error && <Alert variant=\"error\">{error}</Alert>}\r\n        {!pending && success && (posts.length === 0) && <Alert variant=\"info\">No posts</Alert>}\r\n        <Pagination pages={pages}\r\n          onPageChange={loadPostPage}\r\n          visible={pagination}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nPosts.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n      rate: PropTypes.number,\r\n    })\r\n  ),\r\n  loadPostsByPage: PropTypes.func.isRequired,\r\n  ratePost: PropTypes.func.isRequired,\r\n  request: PropTypes.object.isRequired,\r\n  pages: PropTypes.number.isRequired,\r\n  postsPerPage: PropTypes.number,\r\n  pagination: PropTypes.bool,\r\n};\r\n\r\nexport default Posts;","import { connect } from 'react-redux';\r\nimport { getPosts, getPages, getRequest, loadPostsByPageRequest, ratePostRequest } from '../../../redux/postsRedux';\r\nimport Posts from './Posts';\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: getPosts(state),\r\n  request: getRequest(state),\r\n  pages: getPages(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadPostsByPage: (page, postsNumber) => dispatch(loadPostsByPageRequest(page, postsNumber)),\r\n  ratePost: (value, id) => dispatch(ratePostRequest(value, id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport Posts from '../../features/Posts/PostsContainer';\r\n\r\nconst HomePage = () => (\r\n  <div>\r\n    <div>\r\n      <PageTitle>Blog</PageTitle>\r\n      <Posts postsPerPage={3} pagination={false} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nclass PostsCounter extends React.Component {\r\n\r\n  render() {\r\n    const { postsCount } = this.props;\r\n\r\n    return (\r\n      <div className=\"PostsCounter\">\r\n      {postsCount ? \r\n        <div>Posts: {postsCount}</div>\r\n      :\r\n        <div>No posts found</div>\r\n      }\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\n\r\nPostsCounter.propTypes = {\r\n  postsCount: PropTypes.number.isRequired\r\n};\r\n\r\nexport default PostsCounter;","import { connect } from 'react-redux';\r\nimport { getPostsCount } from '../../../redux/postsRedux';\r\nimport PostsCounter from './PostsCounter';\r\n\r\nconst mapStateToProps = state => ({\r\n  postsCount: getPostsCount(state),\r\n})\r\n\r\nexport default connect(mapStateToProps)(PostsCounter);\r\n","import React from 'react';\r\n\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport PostsCounter from '../../features/PostsCounter/PostsCounterContainer';\r\nimport Posts from '../../features/Posts/PostsContainer';\r\n\r\nconst PostsPage = () => (\r\n  <div>\r\n    <PageTitle>Posts list</PageTitle>\r\n    <PostsCounter />\r\n    <Posts />\r\n  </div>\r\n);\r\n\r\nexport default PostsPage;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { FacebookProvider, Comments, ShareButton } from 'react-facebook';\r\nimport { BASE_URL } from '../../../config';\r\n\r\nimport RatePost from '../RatePost/RatePost';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Button from '../../common/Button/Button';\r\n\r\nclass SinglePost extends React.Component {\r\n\r\n  state = {\r\n    isMounted: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { loadSinglePost, match, loadRandomPost } = this.props;\r\n    match !== 'random' ? loadSinglePost(match) : loadRandomPost();\r\n    this.setState({ isMounted: true });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({ isMounted: false });\r\n  }\r\n\r\n  render() {\r\n    const { singlePost, location, ratePost } = this.props;\r\n    const { id, title, author, content, rate } = this.props.singlePost;\r\n    const { pending, error, success } = this.props.request;\r\n    const { isMounted } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {(pending || !success) && <Spinner />}\r\n        {!pending && success && singlePost && \r\n          <div>\r\n            <PageTitle>{title}</PageTitle> \r\n            <p className=\"post-author\">Author: {author}</p>\r\n            <HtmlBox className=\"post-content\">{content}</HtmlBox>\r\n            {isMounted &&\r\n            <FacebookProvider appId=\"903746783320802\">\r\n              <Comments href={`${BASE_URL}/${location.pathname}`} />\r\n              <Link to={'/posts'}>\r\n                <Button variant=\"primary\">\r\n                  Back to posts\r\n                </Button>\r\n              </Link>\r\n              <ShareButton className=\"button button--primary\" href={`${BASE_URL}/${location.pathname}`}>\r\n                Share on Facebook\r\n              </ShareButton>\r\n              <RatePost ratePost={ratePost} id={id} rate={rate} />\r\n            </FacebookProvider>\r\n            }\r\n          </div>\r\n        }\r\n        {!pending && error && <Alert variant=\"error\">{error}</Alert>}\r\n        {!pending && success && !singlePost && <Alert variant=\"info\">Post not found</Alert>}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nSinglePost.propTypes = {\r\n  singlePost: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    title: PropTypes.string,\r\n    content: PropTypes.string,\r\n    author: PropTypes.string,\r\n  }),\r\n  request: PropTypes.object.isRequired,\r\n  loadSinglePost: PropTypes.func.isRequired,\r\n  ratePost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SinglePost;","import { connect } from 'react-redux';\r\nimport { getSinglePost, getRequest, loadSinglePostRequest, loadRandomPostRequest, ratePostRequest } from '../../../redux/postsRedux';\r\nimport SinglePost from './SinglePost';\r\n\r\nconst mapStateToProps = state => ({\r\n  singlePost: getSinglePost(state),\r\n  request: getRequest(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadSinglePost: (id) => dispatch(loadSinglePostRequest(id)),\r\n  loadRandomPost: () => dispatch(loadRandomPostRequest()),\r\n  ratePost: (value, id) => dispatch(ratePostRequest(value, id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SinglePost);\r\n","import React from 'react';\r\nimport SinglePost from '../../features/SinglePost/SinglePostContainer';\r\n\r\nconst SinglePostPage = props => (\r\n  <div>\r\n    <SinglePost location={props.location} match={props.match.params.id} />\r\n  </div>\r\n);\r\n\r\nexport default SinglePostPage;","import React from 'react';\r\nimport SinglePost from '../../features/SinglePost/SinglePostContainer';\r\n\r\nconst RandomPostPage = props => (\r\n  <div>\r\n    <SinglePost location={props.location} match={'random'} />\r\n  </div>\r\n);\r\n\r\nexport default RandomPostPage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TextField.scss';\r\n\r\nconst TextField = ({ value, label, onChange, ...otherProps }) => (\r\n  <label className=\"text-field\">\r\n    <span className={`text-field__label ${(!value.length > 0) ? 'text-field__label--big' : ''}`}>{label}</span>\r\n    <input {...otherProps} value={value} onChange={onChange} className=\"text-field__input\" />\r\n  </label>\r\n);\r\n\r\nTextField.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TextField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SectionTitle.scss';\r\n\r\nconst SectionTitle = ({ children }) => (\r\n  <h2 className=\"section-title\">\r\n     {children}\r\n  </h2>\r\n);\r\n\r\nSectionTitle.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default SectionTitle;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport Editor from 'react-medium-editor';\r\nimport 'medium-editor/dist/css/medium-editor.css';\r\nimport 'medium-editor/dist/css/themes/default.css';\r\n\r\nimport TextField from '../../common/TextField/TextField';\r\nimport SectionTitle from '../../common/SectionTitle/SectionTitle';\r\nimport Button from '../../common/Button/Button';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport './PostForm.scss';\r\n\r\nclass PostForm extends React.Component {\r\n\r\n  state = {\r\n    post: {\r\n      title: '',\r\n      author: '',\r\n      content: ''\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { resetRequest, loadSinglePost, match } = this.props;\r\n    resetRequest();\r\n    if(match.params.id) await loadSinglePost(match.params.id);\r\n    const { singlePost } = this.props;\r\n    if(match.params.id) this.setState({ post: singlePost });\r\n  }\r\n\r\n  handleChange = e => {\r\n    const { post } = this.state;\r\n    this.setState({ post: { ...post, [e.target.name]: e.target.value } });\r\n  }\r\n\r\n  handleEditor = text => {\r\n    const { post } = this.state;\r\n    this.setState({ post: { ...post, content: text  }});\r\n  }\r\n\r\n  handlePostSubmit = e => {\r\n    const { addPost, editPost, match, resetRequest } = this.props;\r\n    const { post } = this.state;\r\n\r\n    e.preventDefault();\r\n    if (match.params.id) {\r\n      resetRequest();\r\n      editPost(post, match.params.id);\r\n    }\r\n    else addPost(post);\r\n  }\r\n\r\n  handlePostDelete = id => {\r\n    const { resetRequest, deletePost } = this.props;\r\n    resetRequest();\r\n    deletePost(id);\r\n  }\r\n\r\n  render() {\r\n    const { post } = this.state;\r\n    const { handleChange, handleEditor, handlePostSubmit, handlePostDelete } = this;\r\n    const { request, match, singlePost } = this.props;\r\n\r\n    if(request.error) return <Alert variant=\"error\">{request.error}</Alert>\r\n    else if(!singlePost.title && request.success) return <Alert variant=\"success\">{!match.params.id ? 'Post has been added!' : 'Post has been updated!'}</Alert>\r\n    else if(request.pending) return <Spinner />\r\n    else return (\r\n      <form onSubmit={handlePostSubmit}>\r\n        <TextField\r\n          label=\"Title\"\r\n          value={post.title}\r\n          onChange={handleChange}\r\n          name=\"title\"\r\n        />\r\n        <TextField\r\n          label=\"Author\"\r\n          value={post.author}\r\n          onChange={handleChange}\r\n          name=\"author\"\r\n        />\r\n        <SectionTitle>Edit post content</SectionTitle>\r\n        <Editor\r\n          className=\"content-editor\"\r\n          text={post.content}\r\n          onChange={handleEditor}\r\n          options={{ placeholder: false, toolbar: { buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3'] } }}\r\n        />\r\n        <Button variant=\"primary\">{!match.params.id ? 'Add post' : 'Update post'}</Button>\r\n        {match.params.id && <button type=\"button\" onClick={(id) => handlePostDelete(match.params.id)} className=\"button button--danger\">Delete post</button>}\r\n      </form>\r\n    );\r\n  }\r\n};\r\n\r\nPostForm.propTypes = {\r\n  request: PropTypes.object.isRequired,\r\n  addPost: PropTypes.func.isRequired,\r\n  editPost: PropTypes.func.isRequired,\r\n  singlePost: PropTypes.object,\r\n  match: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default PostForm;\r\n","import { connect } from 'react-redux';\r\nimport { getRequest, addPostRequest, getSinglePost, loadSinglePostRequest, editPostRequest, resetRequest, deletePostRequest } from '../../../redux/postsRedux';\r\nimport PostForm from './PostForm';\r\n\r\nconst mapStateToProps = state => ({\r\n  request: getRequest(state),\r\n  singlePost: getSinglePost(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addPost: (post) => dispatch(addPostRequest(post)),\r\n  loadSinglePost: (id) => dispatch(loadSinglePostRequest(id)),\r\n  editPost: (post, id) => dispatch(editPostRequest(post, id)),\r\n  resetRequest: () => dispatch(resetRequest()),\r\n  deletePost: (id) => dispatch(deletePostRequest(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);\r\n","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport PostForm from '../../features/PostForm/PostFormContainer';\r\n\r\nconst AddPostPage = props => (\r\n  <div>\r\n    <PageTitle>Add post</PageTitle>\r\n    <PostForm match={props.match} />\r\n  </div>\r\n);\r\n\r\nexport default AddPostPage;","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport PostForm from '../../features/PostForm/PostFormContainer';\r\n\r\nconst EditPostPage = props => (\r\n  <div>\r\n    <PageTitle>Edit post</PageTitle>\r\n    <PostForm match={props.match} />\r\n  </div>\r\n);\r\n\r\nexport default EditPostPage;\r\n","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\n\r\nconst ContactPage = () => (\r\n  <div>\r\n    <PageTitle>Contact</PageTitle>\r\n    <div className=\"contact-content\">\r\n      <div className=\"address\">\r\n        Your Favourite Blog Page Ltd.<br/>\r\n        314 Pennsylvania Avenue<br/>\r\n        Washington, WA 200001<br/>\r\n      </div>\r\n      <p>Mobile Number: <a href=\"tel:+02079143411\">207-914-3411</a></p>\r\n    </div>\r\n    <a href=\"https://github.com/kajpawl/\" style={{ position: \"fixed\", bottom: \"26px\", left: 0, right: 0, textAlign: \"center\", fontSize: \"14px\" }}>© Kajetan Pawliszyn 2019</a>\r\n  </div>\r\n);\r\n\r\nexport default ContactPage;","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n  <div>\r\n    <h1>404 Not Found</h1>\r\n  </div>\r\n);\r\n\r\nexport default NotFoundPage;","import { Component } from 'react';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass ScrollToTop extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    const { location } = this.props;\r\n    if (location.pathname !== prevProps.location.pathname) {\r\n      window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n      });\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  };\r\n};\r\n\r\nexport default withRouter(ScrollToTop);\r\n\r\n\r\n\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport MainLayout from './components/layout/MainLayout/MainLayout';\n\n// import routes\nimport Home from './components/pages/Home/HomePage';\nimport Posts from './components/pages/Posts/PostsPage';\nimport SinglePost from './components/pages/SinglePost/SinglePostPage';\nimport RandomPost from './components/pages/RandomPost/RandomPostPage';\nimport AddPost from './components/pages/AddPost/AddPostPage';\nimport EditPost from './components/pages/EditPost/EditPostPage';\nimport Contact from './components/pages/Contact/ContactPage';\nimport NotFound from './components/pages/NotFound/NotFoundPage';\n\n// reset state.request on changing page\nimport ScrollToTop from './components/features/ScrollToTop/ScrollToTop';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <ScrollToTop>\n        <MainLayout>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/posts\" exact component={Posts} />\n            <Route path=\"/posts/random\" exact component={RandomPost} />\n            <Route path=\"/posts/new\" exact component={AddPost} />\n            <Route path=\"/posts/edit/:id\" exact component={EditPost} />\n            <Route path=\"/posts/:id\" exact component={SinglePost} />\n            <Route path=\"/contact\" exact component={Contact} />\n            <Route component={NotFound} />\n          </Switch>\n        </MainLayout>\n      </ScrollToTop>\n    );\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'animate.css/animate.min.css';\nimport './styles/global.scss';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}